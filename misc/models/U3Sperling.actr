;;
;; Unit 3: Sperling Model
;; from the CMU ACT-R Tutorials
;;

(set-task "actr.tasks.tutorial.U3Sperling")

(sgp :v t :declarative-finst-span 10)

(add-dm
    (attending isa chunk) (low isa chunk)
    (medium isa chunk) (high isa chunk)
    (find isa chunk) (encode isa chunk)
    (goal isa read-letters state attending upper-y 0 lower-y 300))

(p detected-sound
    =aural-location>
        isa      audio-event
    ?aural>
        state    free
==>
    +aural>
        isa      sound
        event    =aural-location
)

(p sound-respond-low
    =goal>
        isa      read-letters
        tone     nil
    =aural>
        isa      sound
        content  500
==>
    =goal>
        tone     low
        upper-y  205
        lower-y  215
)

(p sound-respond-medium
    =goal>
        isa      read-letters
        tone     nil
    =aural>
        isa      sound
        content  1000
==>
    =goal>
        tone     medium
        upper-y  155
        lower-y  165
)

(p sound-respond-high
    =goal>
        isa      read-letters
        tone     nil
    =aural>
        isa      sound
        content  2000
==>
    =goal>
        tone     high
        upper-y  105
        lower-y  115)
(p attend-low
    =goal>
        isa      read-letters
        state    attending
    =visual-location>
        isa      visual-location
        > screen-y 204
        < screen-y 216
    ?visual>
        state    free
==>
    =goal>
        location low
        state    encode
    +visual>
        isa      move-attention
        screen-pos =visual-location
)

(p attend-medium
    =goal>
        isa      read-letters
        state    attending
    =visual-location>
        isa      visual-location
        > screen-y 154
        < screen-y 166
    ?visual>
        state    free
==>
    =goal>
        location medium
        state    encode
    +visual>
        isa      move-attention
        screen-pos =visual-location
)

(p attend-high
    =goal>
        isa      read-letters
        state    attending
    =visual-location>
        isa      visual-location
        > screen-y 104
        < screen-y 116
    ?visual>
        state    free
==>
    =goal>
        location high
        state    encode
    +visual>
        isa      move-attention
        screen-pos =visual-location
)

(p encode-row-and-find
    =goal>
        isa      read-letters
        location =pos
        upper-y  =uy
        lower-y  =ly
    =visual>
        isa      text
==>
    =visual>
        status   =pos
    -visual>
    =goal>
        location nil
        state    attending
    +visual-location>
        isa      visual-location
        :attended nil
        > screen-y =uy 
        < screen-y =ly
)

(P start-report
    =goal>
        isa      read-letters
        tone     =tone
    ?visual>
        state   free
==>
    +goal>
        isa      report-row
        row      =tone
    +retrieval>
        isa      text
        status   =tone
)

(P do-report
    =goal>
        isa      report-row
        row      =tone
    =retrieval>
        isa      text
        status   =tone
        value    =val
    ?manual>
        state    free
==>
        
    +manual>              
        isa      press-key     
        key      =val
    +retrieval>
        isa      text
        status   =tone
        :recently-retrieved nil
)

(p stop-report 
    =goal>
        isa      report-row
        row      =row
        
    ?retrieval>
        state   error
        
    ?manual>
        state    free
==>
    +manual>              
        isa      press-key       
        key      space
    -goal>
)

(goal-focus goal)

(spp start-report :u -2)
(spp detected-sound  :u 10)
(spp sound-respond-low :u 10)
(spp sound-respond-medium :u 10)
(spp sound-respond-high :u 10)
